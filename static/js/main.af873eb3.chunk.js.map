{"version":3,"sources":["CoinElement.module.css","App.module.css","api.js","redux/app-reducer.js","CoinElement.jsx","App.js","redux/redux.js","index.js"],"names":["module","exports","API","axios","get","then","response","data","SET_COINS_DATA","initialState","coinsArray","appReducer","state","action","type","CoinElement","name","price","symbol","marketcap","volume","image","priceChange","className","s","coinElem","coinBlock","coin","src","alt","coinData","toLocaleString","redPercent","toFixed","greenPercent","connect","app","getCoinsData","dispatch","a","props","useState","search","setSearch","useEffect","searchedCoins","filter","toLowerCase","includes","text","input","placeholder","onChange","event","target","value","map","current_price","total_volume","market_cap","price_change_percentage_24h","id","mainReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af873eb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinElem\":\"CoinElement_coinElem__3t9SD\",\"coinBlock\":\"CoinElement_coinBlock__3mDuC\",\"coin\":\"CoinElement_coin__2kY1N\",\"symbol\":\"CoinElement_symbol__kOw_Y\",\"coinData\":\"CoinElement_coinData__2VUN7\",\"price\":\"CoinElement_price__3tllV\",\"volume\":\"CoinElement_volume__3Bfcq\",\"marketcap\":\"CoinElement_marketcap__2zz3c\",\"redPercent\":\"CoinElement_redPercent__1ReTV\",\"greenPercent\":\"CoinElement_greenPercent__ta0bW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__B9Cdi\",\"search\":\"App_search__22SHp\",\"text\":\"App_text__1RFyu\",\"input\":\"App_input__2WQUd\"};","import axios from 'axios'\r\n\r\n\r\n\r\nexport const API = {\r\n    getCoinData(){\r\n        return axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {API} from \"../api\";\r\n\r\nconst SET_COINS_DATA = 'app-reducer/SET_COINS_DATA'\r\n\r\nconst initialState = {\r\n    coinsArray: []\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_COINS_DATA:\r\n            return {...state, coinsArray: action.coinsArray}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCoinsData = (coinsArray) => ({\r\n    type: SET_COINS_DATA, coinsArray\r\n})\r\n\r\n\r\nexport const getCoinsData = () => {\r\n    return async (dispatch) => {\r\n        let response = await API.getCoinData()\r\n        dispatch(setCoinsData(response))\r\n    }\r\n}\r\n\r\nexport default appReducer","import s from './CoinElement.module.css'\r\n\r\n\r\n\r\n\r\nconst CoinElement = ({name, price, symbol, marketcap, volume, image, priceChange}) => {\r\n    return (\r\n        <div className={s.coinElem}>\r\n            <div className={s.coinBlock}>\r\n                <div className={s.coin}>\r\n                    <img src={image} alt='crypto' />\r\n                    <h1>{name}</h1>\r\n                    <p className={s.symbol}>{symbol}</p>\r\n                </div>\r\n                <div className={s.coinData}>\r\n                    <p className={s.price}>${price}</p>\r\n                    <p className={s.volume}>${volume.toLocaleString()}</p>\r\n\r\n                    {priceChange < 0 ? (\r\n                        <p className={s.redPercent}>{priceChange.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className={s.greenPercent}>{priceChange.toFixed(2)}%</p>\r\n                    )}\r\n\r\n                    <p className={s.marketcap}>\r\n                        Mkt Cap: ${marketcap.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CoinElement","import s from './App.module.css'\nimport {connect} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {getCoinsData} from \"./redux/app-reducer\";\nimport CoinElement from \"./CoinElement\";\n\nfunction App(props) {\n\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        props.getCoinsData()\n    }, [])\n\n    if(!props.coinsArray[0]){\n        return null\n    }\n\n    const searchingCoin = (event) => {\n        setSearch(event.target.value)\n    }\n\n    const searchedCoins = props.coinsArray.filter(coin =>\n        coin.name.toLowerCase().includes(search.toLowerCase())\n    )\n\n      return (\n        <div className={s.app}>\n          <div className={s.search}>\n            <form>\n                <h1 className={s.text}></h1>\n              <input type='text' className={s.input} placeholder={'Search Coin'} onChange={searchingCoin}/>\n            </form>\n          </div>\n          <div>\n            {searchedCoins.map(coin => {\n              return <CoinElement key={coin.id}\n                                  name={coin.name}\n                                  price={coin.current_price}\n                                  symbol={coin.symbol}\n                                  marketcap={coin.total_volume}\n                                  volume={coin.market_cap}\n                                  image={coin.image}\n                                  priceChange={coin.price_change_percentage_24h}\n              />\n            })}\n          </div>\n        </div>\n      )\n}\n\nlet mapStateToProps = (state) => ({\n    coinsArray: state.app.coinsArray\n})\n\nexport default connect(mapStateToProps, {getCoinsData})(App)\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet mainReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\n\r\nlet store = createStore(mainReducer, applyMiddleware(thunkMiddleWare))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}